import axios from"axios";import{setTimeout}from"timers";const burl="/larpassport/public/api/";axios.interceptors.response.use(response=>response,error=>Promise.reject(error));const posts={namespaced:!0,state:{posts:[]},actions:{fetch_posts:({commit:commit})=>new Promise((resolve,reject)=>{const accessToken=localStorage.getItem("token");let axiosConfig={headers:{Authorization:"Bearer "+accessToken,Accept:"application/json"}};axios.get(burl+"posts",axiosConfig).then(response=>{commit("SET_POSTS",response.data.success),resolve(response.data.success)}).catch(err=>{commit("UNSET_POSTS"),reject(err)})}),save_post:({commit:commit},frmdata)=>new Promise((resolve,reject)=>{axios.post(burl+"posts/savepost",frmdata.postData,frmdata.axiosConfig).then(response=>{commit("SET_POSTS",response.data.success),resolve(response.data.success)}).catch(err=>{reject(err)})}),update_post:({commit:commit},frmdata)=>new Promise((resolve,reject)=>{axios.post(burl+"posts/updatepost",frmdata.postData,frmdata.axiosConfig).then(response=>{resolve(response.data.success),commit("SET_POST",response.data.success)}).catch(err=>{reject(err)})})},getters:{getAllPost:state=>state.posts,getPost:state=>id=>state.posts.find(post=>post.id==id)},mutations:{SET_POSTS(state,postdata){state.posts=postdata},SET_POST(state,postdata){state.posts.find(post=>{post.id==postdata.id&&(post.title=postdata.title,post.content=postdata.content)})},UNSET_POSTS(state){state.posts=[]}}};export default posts;