import axios from"axios";import{setTimeout}from"timers";const burl="/larpassport/public/api/";axios.interceptors.response.use(response=>response,error=>Promise.reject(error));const users={namespaced:!0,state:{users:{name:"",email:"",id:""},isLogin:!1},actions:{login_accnt:({commit:commit},frmdata)=>new Promise((resolve,reject)=>{axios.post(burl+"login",frmdata.postData,frmdata.axiosConfig).then(response=>{commit("SET_USER",response.data.success.user),localStorage.setItem("token",response.data.success.token),resolve(response.data.success)}).catch(err=>{commit("UNSET_USER"),localStorage.removeItem("token"),reject(err)})}),check_auth:({commit:commit},frmdata)=>new Promise((resolve,reject)=>{axios.post(burl+"details","",frmdata).then(response=>{commit("SET_USER",response.data.success),resolve(response.data.success)}).catch(err=>{reject(err)})}),logout_user:({commit:commit},frmdata)=>new Promise((resolve,reject)=>{axios.get(burl+"logout",frmdata).then(response=>{commit("UNSET_USER"),resolve(response.data.success)}).catch(err=>{reject(err)})})},getters:{getUserInfo:state=>state.users,getUserId:state=>state.users.id,getUserAuth:state=>state.isLogin},mutations:{SET_USER(state,dd){state.users.name=dd.name,state.users.email=dd.email,state.users.id=dd.id,state.isLogin=!0},UNSET_USER(state){state.users.name="",state.users.email="",state.users.id="",state.isLogin=!1}}};export default users;